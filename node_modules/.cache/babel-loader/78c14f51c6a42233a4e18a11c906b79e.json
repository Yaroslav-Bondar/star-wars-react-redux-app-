{"ast":null,"code":"var _jsxFileName = \"/home/yaroslav/develop/web/apps/React/react-app/src/containers/PeoplePage/PeoplePage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styles from './PeoplePage.module.css';\nimport { getApiResource } from '../../utils/network';\nimport { API_PEOPLE, SWAPI_PEOPLE } from '../../constants/api'; // \n\nimport { getPeopleId, getPeopleImage } from '../../services/getPeopleData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PeoplePage = () => {\n  _s();\n\n  const [people, setPeople] = useState(null);\n\n  const getResource = async url => {\n    // console.log(await getApiResource(url));\n    const data = await getApiResource(url);\n    const peopleList = data.results.map(_ref => {\n      let {\n        name,\n        url\n      } = _ref;\n      console.log(name, url); // const id = getPeopleId(url);\n\n      const id = getPeopleId(url, SWAPI_PEOPLE);\n      const img = getPeopleImage(id);\n      console.log(img);\n      console.log('id ', id);\n      return {\n        id,\n        name,\n        img\n      };\n    }); // console.log({people});\n\n    setPeople(peopleList); // console.log({people});\n  };\n\n  useEffect(() => {\n    getResource(API_PEOPLE);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"PeoplePage\", people && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [people.map(_ref2 => {\n        let {\n          id,\n          name,\n          img\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: img,\n            alt: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this);\n      }), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true); // <li key={(idex+1).toString()}>{url}</li>\n  // {people && people.map(({name, url}, idex)=> \n  //      <div>\n  //      <li key={idex.toString()}>{name +' '+idex}</li>\n  //      <li key={(idex+1).toString()}>{url}</li>\n  //      </div>\n  // )};\n};\n\n_s(PeoplePage, \"Z52GR7kCjgYN3/rXmACAB6cx4Xo=\");\n\n_c = PeoplePage;\nexport default PeoplePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeoplePage\");","map":{"version":3,"sources":["/home/yaroslav/develop/web/apps/React/react-app/src/containers/PeoplePage/PeoplePage.jsx"],"names":["useState","useEffect","styles","getApiResource","API_PEOPLE","SWAPI_PEOPLE","getPeopleId","getPeopleImage","PeoplePage","people","setPeople","getResource","url","data","peopleList","results","map","name","console","log","id","img"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,qBAAzC,C,CACA;;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,8BAA5C;;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;;AACA,QAAMW,WAAW,GAAG,MAAOC,GAAP,IAAe;AAC/B;AACA,UAAMC,IAAI,GAAG,MAAMV,cAAc,CAACS,GAAD,CAAjC;AACA,UAAME,UAAU,GAAGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiB,QAAiB;AAAA,UAAhB;AAACC,QAAAA,IAAD;AAAOL,QAAAA;AAAP,OAAgB;AACjDM,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkBL,GAAlB,EADiD,CAEjD;;AACA,YAAMQ,EAAE,GAAGd,WAAW,CAACM,GAAD,EAAMP,YAAN,CAAtB;AACA,YAAMgB,GAAG,GAAGd,cAAc,CAACa,EAAD,CAA1B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBC,EAAnB;AACA,aAAO;AACHA,QAAAA,EADG;AAEHH,QAAAA,IAFG;AAGHI,QAAAA;AAHG,OAAP;AAKH,KAZkB,CAAnB,CAH+B,CAgB/B;;AACAX,IAAAA,SAAS,CAACI,UAAD,CAAT,CAjB+B,CAkB/B;AACH,GAnBD;;AAoBAb,EAAAA,SAAS,CAAC,MAAK;AACXU,IAAAA,WAAW,CAACP,UAAD,CAAX;AACH,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACI;AAAA,6BACKK,MAAM,iBACH;AAAA,iBACKA,MAAM,CAACO,GAAP,CAAW;AAAA,YAAC;AAACI,UAAAA,EAAD;AAAKH,UAAAA,IAAL;AAAWI,UAAAA;AAAX,SAAD;AAAA,4BACR;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEA,GAAV;AAAe,YAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAIJ;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAASG,EAAT;AAAA;AAAA;AAAA;AAAA,gBADQ;AAAA,OAAX,CADL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR;AAAA,kBADJ,CAzBqB,CAuCrB;AAEA;AACA;AACA;AACA;AACA;AACA;AACH,CA/CD;;GAAMZ,U;;KAAAA,U;AAiDN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport styles from './PeoplePage.module.css';\nimport { getApiResource } from '../../utils/network';\nimport { API_PEOPLE, SWAPI_PEOPLE } from '../../constants/api';\n// \nimport { getPeopleId, getPeopleImage } from '../../services/getPeopleData';\nconst PeoplePage = () => {\n    const [people, setPeople] = useState(null);\n    const getResource = async (url) => {\n        // console.log(await getApiResource(url));\n        const data = await getApiResource(url);\n        const peopleList = data.results.map(({name, url}) => {\n            console.log(name, url);\n            // const id = getPeopleId(url);\n            const id = getPeopleId(url, SWAPI_PEOPLE);\n            const img = getPeopleImage(id);\n            console.log(img);\n            console.log('id ', id);\n            return {\n                id,\n                name,\n                img,\n            }\n        });\n        // console.log({people});\n        setPeople(peopleList);\n        // console.log({people});\n    };\n    useEffect(()=> {\n        getResource(API_PEOPLE);\n    },[]);\n    return (\n        <>PeoplePage\n            {people && (\n                <ul>\n                    {people.map(({id, name, img})=> \n                        <li key={id}>\n                            <img src={img} alt=\"avatar\"/>\n                            <p>{name}</p>\n                        </li>\n                    )};\n                </ul>\n            )}\n        </>\n    );\n    // <li key={(idex+1).toString()}>{url}</li>\n    \n    // {people && people.map(({name, url}, idex)=> \n    //      <div>\n    //      <li key={idex.toString()}>{name +' '+idex}</li>\n    //      <li key={(idex+1).toString()}>{url}</li>\n    //      </div>\n    // )};\n}\n\nexport default PeoplePage;\n\n      "]},"metadata":{},"sourceType":"module"}