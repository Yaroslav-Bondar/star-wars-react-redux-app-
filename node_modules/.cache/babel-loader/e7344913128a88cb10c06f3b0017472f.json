{"ast":null,"code":"var _jsxFileName = \"/home/yaroslav/develop/web/apps/React/react-app/src/containers/PeoplePage/PeoplePage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // checking type of props https://github.com/facebook/prop-types \n\nimport PropTypes from 'prop-types';\nimport { withErrorApi } from '../../hoc-helpers/withErrorApi';\nimport PeopleList from '../../components/PeoplePage/PeopleList';\nimport { getApiResource } from '../../utils/network';\nimport { useQueryParams } from '../../hooks/useQueryParams';\nimport { getPeopleId, getPeopleImage } from '../../services/getPeopleData';\nimport { API_PEOPLE, SWAPI_PEOPLE } from '../../constants/api';\nimport styles from './PeoplePage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PeoplePage = _ref => {\n  _s();\n\n  let {\n    setErrorApi\n  } = _ref;\n  const [people, setPeople] = useState(null);\n  console.log(useQueryParams);\n\n  const getResource = async url => {\n    const data = await getApiResource(url);\n    console.log(data); // if the data does not contain an error\n\n    if (true !== data instanceof Error) {\n      try {\n        const peopleList = data.results.map(_ref2 => {\n          let {\n            name,\n            url\n          } = _ref2;\n          const id = getPeopleId(url, SWAPI_PEOPLE);\n          const img = getPeopleImage(id);\n          return {\n            id,\n            name,\n            img\n          };\n        });\n        setPeople(peopleList); // console.log(people);\n\n        setErrorApi(false);\n      } catch (error) {\n        setErrorApi(error);\n      }\n    } // if the data contains an error \n    else {\n      console.log(people); // call to display error (higher-order component withErrorApi)\n\n      setErrorApi(data);\n    }\n  };\n\n  useEffect(() => {\n    console.log('useEffect');\n    getResource(API_PEOPLE); // getResource('https://swapi.dev/api/people/?page=2');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"PeoplePage\", people && /*#__PURE__*/_jsxDEV(PeopleList, {\n      people: people\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PeoplePage, \"Z52GR7kCjgYN3/rXmACAB6cx4Xo=\");\n\n_c = PeoplePage;\nPeoplePage.propTypes = {\n  setErrorApi: PropTypes.func\n};\nexport default _c2 = withErrorApi(PeoplePage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PeoplePage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/yaroslav/develop/web/apps/React/react-app/src/containers/PeoplePage/PeoplePage.jsx"],"names":["useState","useEffect","PropTypes","withErrorApi","PeopleList","getApiResource","useQueryParams","getPeopleId","getPeopleImage","API_PEOPLE","SWAPI_PEOPLE","styles","PeoplePage","setErrorApi","people","setPeople","console","log","getResource","url","data","Error","peopleList","results","map","name","id","img","error","propTypes","func"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAAQC,cAAR,QAA6B,4BAA7B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,8BAA5C;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,qBAAzC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;;AAEA,MAAMC,UAAU,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAACC,IAAAA;AAAD,GAAkB;AAClC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,IAAD,CAApC;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYX,cAAZ;;AACA,QAAMY,WAAW,GAAG,MAAOC,GAAP,IAAe;AAC/B,UAAMC,IAAI,GAAG,MAAMf,cAAc,CAACc,GAAD,CAAjC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ,EAF+B,CAG/B;;AACA,QAAG,SAASA,IAAI,YAAYC,KAA5B,EAAmC;AACnC,UAAI;AACA,cAAMC,UAAU,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiB,SAAiB;AAAA,cAAhB;AAACC,YAAAA,IAAD;AAAON,YAAAA;AAAP,WAAgB;AACjD,gBAAMO,EAAE,GAAGnB,WAAW,CAACY,GAAD,EAAMT,YAAN,CAAtB;AACA,gBAAMiB,GAAG,GAAGnB,cAAc,CAACkB,EAAD,CAA1B;AACA,iBAAO;AACHA,YAAAA,EADG;AAEHD,YAAAA,IAFG;AAGHE,YAAAA;AAHG,WAAP;AAKH,SARkB,CAAnB;AASAZ,QAAAA,SAAS,CAACO,UAAD,CAAT,CAVA,CAWA;;AACAT,QAAAA,WAAW,CAAC,KAAD,CAAX;AACC,OAbL,CAcI,OAAMe,KAAN,EAAa;AACTf,QAAAA,WAAW,CAACe,KAAD,CAAX;AACH;AACJ,KAlBD,CAkBE;AAlBF,SAmBK;AACDZ,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EADC,CAED;;AACAD,MAAAA,WAAW,CAACO,IAAD,CAAX;AACH;AACJ,GA5BD;;AA6BAnB,EAAAA,SAAS,CAAC,MAAK;AACXe,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAC,IAAAA,WAAW,CAACT,UAAD,CAAX,CAFW,CAGX;AACH,GAJQ,EAIP,EAJO,CAAT;AAKA,sBACI;AAAA,6BACMK,MAAM,iBAAI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAIA;AAAtB;AAAA;AAAA;AAAA;AAAA,YADhB;AAAA,kBADJ;AAKH,CA1CD;;GAAMF,U;;KAAAA,U;AA4CNA,UAAU,CAACiB,SAAX,GAAuB;AACnBhB,EAAAA,WAAW,EAAEX,SAAS,CAAC4B;AADJ,CAAvB;AAIA,qBAAe3B,YAAY,CAACS,UAAD,CAA3B","sourcesContent":["import { useState, useEffect } from 'react';\n// checking type of props https://github.com/facebook/prop-types \nimport PropTypes from 'prop-types';\nimport { withErrorApi } from '../../hoc-helpers/withErrorApi';\nimport PeopleList from '../../components/PeoplePage/PeopleList';\nimport { getApiResource } from '../../utils/network';\nimport {useQueryParams} from '../../hooks/useQueryParams';\nimport { getPeopleId, getPeopleImage } from '../../services/getPeopleData';\nimport { API_PEOPLE, SWAPI_PEOPLE } from '../../constants/api';\nimport styles from './PeoplePage.module.css';\n\nconst PeoplePage = ({setErrorApi}) => {\n    const [people, setPeople] = useState(null);\n    console.log(useQueryParams);\n    const getResource = async (url) => {\n        const data = await getApiResource(url);\n        console.log(data);\n        // if the data does not contain an error\n        if(true !== data instanceof Error) {\n        try {\n            const peopleList = data.results.map(({name, url}) => {\n                const id = getPeopleId(url, SWAPI_PEOPLE);\n                const img = getPeopleImage(id);\n                return {\n                    id,\n                    name,\n                    img,\n                }\n            });\n            setPeople(peopleList);\n            // console.log(people);\n            setErrorApi(false);\n            }\n            catch(error) {\n                setErrorApi(error);\n            }\n        } // if the data contains an error \n        else {\n            console.log(people);\n            // call to display error (higher-order component withErrorApi)\n            setErrorApi(data);  \n        }\n    };\n    useEffect(()=> {\n        console.log('useEffect')\n        getResource(API_PEOPLE);\n        // getResource('https://swapi.dev/api/people/?page=2');\n    },[]);\n    return (\n        <>PeoplePage\n            { people && <PeopleList people = {people}/> }\n        </>\n    );\n}\n\nPeoplePage.propTypes = {\n    setErrorApi: PropTypes.func,\n}\n\nexport default withErrorApi(PeoplePage);\n\n      "]},"metadata":{},"sourceType":"module"}