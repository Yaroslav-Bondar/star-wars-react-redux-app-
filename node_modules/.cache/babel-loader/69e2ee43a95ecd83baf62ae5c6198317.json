{"ast":null,"code":"var _jsxFileName = \"/home/yaroslav/develop/web/apps/React/react-app/src/components/UI/UiButton/UiButton.stories.js\";\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import UiButton from \\\"./UiButton\\\";\\n\\nexport default {\\n    title: 'Ui-Kit/UiButton',\\n    component: UiButton,\\n\\n}\\n\\nconst props = {\\n    text: 'Button',\\n    onClick: () => console.log('Button click'),\\n    disabled: false,\\n    theme: 'light',\\n    classes: '',\\n}\\n//👇 We create a “template” of how args map to rendering\\nconst Template = (args) => <UiButton {...args} />;\\n\\n//👇 Each story then reuses that template\\nexport const Light = Template.bind({});\\nLight.args = {\\n//    primary: true,\\n//    label: 'Button',\\n    ...props,\\n    // text: 'Hello',\\n    theme: 'light',\\n};\\nexport const Dark = Template.bind({});\\nDark.args = {\\n    ...props,\\n    theme: 'dark',\\n};\\nexport const Disabled = Template.bind({});\\nDisabled.args = {\\n    ...props,\\n    disabled: true,\\n    // theme: 'dark',\\n};\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"Light\": {\n    \"startLoc\": {\n      \"col\": 17,\n      \"line\": 17\n    },\n    \"endLoc\": {\n      \"col\": 49,\n      \"line\": 17\n    },\n    \"startBody\": {\n      \"col\": 17,\n      \"line\": 17\n    },\n    \"endBody\": {\n      \"col\": 49,\n      \"line\": 17\n    }\n  },\n  \"Dark\": {\n    \"startLoc\": {\n      \"col\": 17,\n      \"line\": 17\n    },\n    \"endLoc\": {\n      \"col\": 49,\n      \"line\": 17\n    },\n    \"startBody\": {\n      \"col\": 17,\n      \"line\": 17\n    },\n    \"endBody\": {\n      \"col\": 49,\n      \"line\": 17\n    }\n  },\n  \"Disabled\": {\n    \"startLoc\": {\n      \"col\": 17,\n      \"line\": 17\n    },\n    \"endLoc\": {\n      \"col\": 49,\n      \"line\": 17\n    },\n    \"startBody\": {\n      \"col\": 17,\n      \"line\": 17\n    },\n    \"endBody\": {\n      \"col\": 49,\n      \"line\": 17\n    }\n  }\n};\nimport UiButton from \"./UiButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Ui-Kit/UiButton',\n  component: UiButton\n};\nconst props = {\n  text: 'Button',\n  onClick: () => console.log('Button click'),\n  disabled: false,\n  theme: 'light',\n  classes: ''\n}; //👇 We create a “template” of how args map to rendering\n\nconst Template = args => /*#__PURE__*/_jsxDEV(UiButton, { ...args\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 28\n}, this); //👇 Each story then reuses that template\n\n\n_c = Template;\nexport const Light = Template.bind({});\n;\nLight.args = { //    primary: true,\n  //    label: 'Button',\n  ...props,\n  // text: 'Hello',\n  theme: 'light'\n};\nexport const Dark = Template.bind({});\n;\nDark.args = { ...props,\n  theme: 'dark'\n};\nexport const Disabled = Template.bind({});\nDisabled.args = { ...props,\n  disabled: true // theme: 'dark',\n\n};\nLight.parameters = {\n  storySource: {\n    source: \"(args) => <UiButton {...args} />\"\n  },\n  ...Light.parameters\n};\nDark.parameters = {\n  storySource: {\n    source: \"(args) => <UiButton {...args} />\"\n  },\n  ...Dark.parameters\n};\nDisabled.parameters = {\n  storySource: {\n    source: \"(args) => <UiButton {...args} />\"\n  },\n  ...Disabled.parameters\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Template\");","map":{"version":3,"sources":["/home/yaroslav/develop/web/apps/React/react-app/src/components/UI/UiButton/UiButton.stories.js"],"names":["__STORY__","__LOCATIONS_MAP__","UiButton","title","component","props","text","onClick","console","log","disabled","theme","classes","Template","args","Light","bind","Dark","Disabled","parameters","storySource","source"],"mappings":";;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,8yBAAhB,C,CACA;;AACA,IAAIC,iBAAiB,GAAG;AAAC,WAAQ;AAAC,gBAAW;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAZ;AAAiC,cAAS;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA1C;AAA+D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA3E;AAAgG,eAAU;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB;AAA1G,GAAT;AAAyI,UAAO;AAAC,gBAAW;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAZ;AAAiC,cAAS;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA1C;AAA+D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA3E;AAAgG,eAAU;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB;AAA1G,GAAhJ;AAAgR,cAAW;AAAC,gBAAW;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAZ;AAAiC,cAAS;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA1C;AAA+D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA3E;AAAgG,eAAU;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB;AAA1G;AAA3R,CAAxB;AAEJ,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe;AACXC,EAAAA,KAAK,EAAE,iBADI;AAEXC,EAAAA,SAAS,EAAEF;AAFA,CAAf;AAMA,MAAMG,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE,QADI;AAEVC,EAAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAFL;AAGVC,EAAAA,QAAQ,EAAE,KAHA;AAIVC,EAAAA,KAAK,EAAE,OAJG;AAKVC,EAAAA,OAAO,EAAE;AALC,CAAd,C,CAOA;;AACA,MAAMC,QAAQ,GAAIC,IAAD,iBAAU,QAAC,QAAD,OAAcA;AAAd;AAAA;AAAA;AAAA;AAAA,QAA3B,C,CAEA;;;KAFMD,Q;AAGN,OAAO,MAAME,KAAK,GAAGF,QAAQ,CAACG,IAAT,CAAc,EAAd,CAAd;AAAgC;AACvCD,KAAK,CAACD,IAAN,GAAa,EACb;AACA;AACI,KAAGT,KAHM;AAIT;AACAM,EAAAA,KAAK,EAAE;AALE,CAAb;AAOA,OAAO,MAAMM,IAAI,GAAGJ,QAAQ,CAACG,IAAT,CAAc,EAAd,CAAb;AAA+B;AACtCC,IAAI,CAACH,IAAL,GAAY,EACR,GAAGT,KADK;AAERM,EAAAA,KAAK,EAAE;AAFC,CAAZ;AAIA,OAAO,MAAMO,QAAQ,GAAGL,QAAQ,CAACG,IAAT,CAAc,EAAd,CAAjB;AACPE,QAAQ,CAACJ,IAAT,GAAgB,EACZ,GAAGT,KADS;AAEZK,EAAAA,QAAQ,EAAE,IAFE,CAGZ;;AAHY,CAAhB;AAOAK,KAAK,CAACI,UAAN,GAAmB;AAAEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAf;AAA+D,KAAGN,KAAK,CAACI;AAAxE,CAAnB;AACAF,IAAI,CAACE,UAAL,GAAkB;AAAEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAf;AAA+D,KAAGJ,IAAI,CAACE;AAAvE,CAAlB;AACAD,QAAQ,CAACC,UAAT,GAAsB;AAAEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAf;AAA+D,KAAGH,QAAQ,CAACC;AAA3E,CAAtB","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import UiButton from \\\"./UiButton\\\";\\n\\nexport default {\\n    title: 'Ui-Kit/UiButton',\\n    component: UiButton,\\n\\n}\\n\\nconst props = {\\n    text: 'Button',\\n    onClick: () => console.log('Button click'),\\n    disabled: false,\\n    theme: 'light',\\n    classes: '',\\n}\\n//👇 We create a “template” of how args map to rendering\\nconst Template = (args) => <UiButton {...args} />;\\n\\n//👇 Each story then reuses that template\\nexport const Light = Template.bind({});\\nLight.args = {\\n//    primary: true,\\n//    label: 'Button',\\n    ...props,\\n    // text: 'Hello',\\n    theme: 'light',\\n};\\nexport const Dark = Template.bind({});\\nDark.args = {\\n    ...props,\\n    theme: 'dark',\\n};\\nexport const Disabled = Template.bind({});\\nDisabled.args = {\\n    ...props,\\n    disabled: true,\\n    // theme: 'dark',\\n};\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Light\":{\"startLoc\":{\"col\":17,\"line\":17},\"endLoc\":{\"col\":49,\"line\":17},\"startBody\":{\"col\":17,\"line\":17},\"endBody\":{\"col\":49,\"line\":17}},\"Dark\":{\"startLoc\":{\"col\":17,\"line\":17},\"endLoc\":{\"col\":49,\"line\":17},\"startBody\":{\"col\":17,\"line\":17},\"endBody\":{\"col\":49,\"line\":17}},\"Disabled\":{\"startLoc\":{\"col\":17,\"line\":17},\"endLoc\":{\"col\":49,\"line\":17},\"startBody\":{\"col\":17,\"line\":17},\"endBody\":{\"col\":49,\"line\":17}}};\n    \nimport UiButton from \"./UiButton\";\n\nexport default {\n    title: 'Ui-Kit/UiButton',\n    component: UiButton,\n\n}\n\nconst props = {\n    text: 'Button',\n    onClick: () => console.log('Button click'),\n    disabled: false,\n    theme: 'light',\n    classes: '',\n}\n//👇 We create a “template” of how args map to rendering\nconst Template = (args) => <UiButton {...args} />;\n\n//👇 Each story then reuses that template\nexport const Light = Template.bind({});;\nLight.args = {\n//    primary: true,\n//    label: 'Button',\n    ...props,\n    // text: 'Hello',\n    theme: 'light',\n};\nexport const Dark = Template.bind({});;\nDark.args = {\n    ...props,\n    theme: 'dark',\n};\nexport const Disabled = Template.bind({});\nDisabled.args = {\n    ...props,\n    disabled: true,\n    // theme: 'dark',\n};\n\n\nLight.parameters = { storySource: { source: \"(args) => <UiButton {...args} />\" }, ...Light.parameters };\nDark.parameters = { storySource: { source: \"(args) => <UiButton {...args} />\" }, ...Dark.parameters };\nDisabled.parameters = { storySource: { source: \"(args) => <UiButton {...args} />\" }, ...Disabled.parameters };"]},"metadata":{},"sourceType":"module"}