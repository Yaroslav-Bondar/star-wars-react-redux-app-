{"ast":null,"code":"var _jsxFileName = \"/home/yaroslav/develop/web/apps/React/react-app/src/containers/PeoplePage/PeoplePage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styles from './PeoplePage.module.css';\nimport { getApiResource } from '../../utils/network';\nimport { API_PEOPLE, SWAPI_PEOPLE } from '../../constants/api';\nimport PeopleList from '../../components/PeoplePage/PeopleList';\nimport { getPeopleId, getPeopleImage } from '../../services/getPeopleData';\nimport { withErrorApi } from '../../hoc-helpers/withErrorApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PeoplePage = _ref => {\n  _s();\n\n  let {\n    setErrorApi\n  } = _ref;\n  const [people, setPeople] = useState(null); // const [errorApi, setErrorApi] = useState(false);\n  // console.log(props);\n\n  const getResource = async url => {\n    // console.log(await getApiResource(url));\n    const data = await getApiResource(url); // !data instanceof Error\n\n    if (true !== data instanceof Error) {\n      try {\n        console.log(data);\n        const peopleList = data.results.map(_ref2 => {\n          let {\n            name,\n            url\n          } = _ref2;\n          // const id = getPeopleId(url);\n          const id = getPeopleId(url, SWAPI_PEOPLE);\n          const img = getPeopleImage(id); // console.log(img);\n          // console.log('id ', id);\n\n          return {\n            id,\n            name,\n            img\n          };\n        });\n        console.log(people);\n        setPeople(peopleList);\n        setErrorApi(false); // console.log({people});\n      } catch (error) {\n        setErrorApi(error);\n      }\n    } else {\n      console.log(people);\n      setErrorApi(data);\n    }\n  };\n\n  useEffect(() => {\n    console.log('useEffect');\n    getResource(API_PEOPLE);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"PeoplePage\", people && /*#__PURE__*/_jsxDEV(PeopleList, {\n      people: people\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PeoplePage, \"Z52GR7kCjgYN3/rXmACAB6cx4Xo=\");\n\n_c = PeoplePage;\nexport default _c2 = withErrorApi(PeoplePage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PeoplePage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/yaroslav/develop/web/apps/React/react-app/src/containers/PeoplePage/PeoplePage.jsx"],"names":["useState","useEffect","styles","getApiResource","API_PEOPLE","SWAPI_PEOPLE","PeopleList","getPeopleId","getPeopleImage","withErrorApi","PeoplePage","setErrorApi","people","setPeople","getResource","url","data","Error","console","log","peopleList","results","map","name","id","img","error"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,qBAAzC;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,8BAA5C;AACA,SAASC,YAAT,QAA6B,gCAA7B;;;;AAEA,MAAMC,UAAU,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAACC,IAAAA;AAAD,GAAkB;AAClC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC,CADkC,CAElC;AACA;;AACA,QAAMc,WAAW,GAAG,MAAOC,GAAP,IAAe;AAC/B;AACA,UAAMC,IAAI,GAAG,MAAMb,cAAc,CAACY,GAAD,CAAjC,CAF+B,CAG/B;;AACA,QAAG,SAASC,IAAI,YAAYC,KAA5B,EAAmC;AACnC,UAAI;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,cAAMI,UAAU,GAAGJ,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAiB,SAAiB;AAAA,cAAhB;AAACC,YAAAA,IAAD;AAAOR,YAAAA;AAAP,WAAgB;AACjD;AACA,gBAAMS,EAAE,GAAGjB,WAAW,CAACQ,GAAD,EAAMV,YAAN,CAAtB;AACA,gBAAMoB,GAAG,GAAGjB,cAAc,CAACgB,EAAD,CAA1B,CAHiD,CAIjD;AACA;;AACA,iBAAO;AACHA,YAAAA,EADG;AAEHD,YAAAA,IAFG;AAGHE,YAAAA;AAHG,WAAP;AAKH,SAXkB,CAAnB;AAYAP,QAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAC,QAAAA,SAAS,CAACO,UAAD,CAAT;AACAT,QAAAA,WAAW,CAAC,KAAD,CAAX,CAhBA,CAiBA;AACC,OAlBL,CAmBI,OAAMe,KAAN,EAAa;AACTf,QAAAA,WAAW,CAACe,KAAD,CAAX;AACH;AACJ,KAvBD,MAwBK;AACDR,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAD,MAAAA,WAAW,CAACK,IAAD,CAAX;AACH;AAEJ,GAjCD;;AAkCAf,EAAAA,SAAS,CAAC,MAAK;AACXiB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAL,IAAAA,WAAW,CAACV,UAAD,CAAX;AACH,GAHQ,EAGP,EAHO,CAAT;AAIA,sBACI;AAAA,6BACMQ,MAAM,iBAAI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAIA;AAAtB;AAAA;AAAA;AAAA;AAAA,YADhB;AAAA,kBADJ;AAKH,CA/CD;;GAAMF,U;;KAAAA,U;AAiDN,qBAAeD,YAAY,CAACC,UAAD,CAA3B","sourcesContent":["import { useState, useEffect } from 'react';\nimport styles from './PeoplePage.module.css';\nimport { getApiResource } from '../../utils/network';\nimport { API_PEOPLE, SWAPI_PEOPLE } from '../../constants/api';\nimport PeopleList from '../../components/PeoplePage/PeopleList';\nimport { getPeopleId, getPeopleImage } from '../../services/getPeopleData';\nimport { withErrorApi } from '../../hoc-helpers/withErrorApi';\n\nconst PeoplePage = ({setErrorApi}) => {\n    const [people, setPeople] = useState(null);\n    // const [errorApi, setErrorApi] = useState(false);\n    // console.log(props);\n    const getResource = async (url) => {\n        // console.log(await getApiResource(url));\n        const data = await getApiResource(url);\n        // !data instanceof Error\n        if(true !== data instanceof Error) {\n        try {\n            console.log(data);\n            const peopleList = data.results.map(({name, url}) => {\n                // const id = getPeopleId(url);\n                const id = getPeopleId(url, SWAPI_PEOPLE);\n                const img = getPeopleImage(id);\n                // console.log(img);\n                // console.log('id ', id);\n                return {\n                    id,\n                    name,\n                    img,\n                }\n            });\n            console.log(people);\n            setPeople(peopleList);\n            setErrorApi(false);\n            // console.log({people});\n            }\n            catch(error) {\n                setErrorApi(error);\n            }\n        } \n        else {\n            console.log(people);\n            setErrorApi(data);\n        }\n\n    };\n    useEffect(()=> {\n        console.log('useEffect')\n        getResource(API_PEOPLE);\n    },[]);\n    return (\n        <>PeoplePage\n            { people && <PeopleList people = {people}/> }\n        </>\n    );\n}\n\nexport default withErrorApi(PeoplePage);\n\n      "]},"metadata":{},"sourceType":"module"}