{"ast":null,"code":"var _jsxFileName = \"/home/yaroslav/develop/web/apps/React/react-app/src/containers/PersonPage/PersonPage.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes, { resetWarningCache } from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { withErrorApi } from '../../hoc-helpers/withErrorApi';\nimport { getApiResource } from '../../utils/network';\nimport { API_PERSON } from '../../constants/api';\nimport styles from './PersonPage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PersonPage = _ref => {\n  _s();\n\n  let {\n    setErrorApi\n  } = _ref;\n  // console.log(id);\n  const [personInfo, setPersonInfo] = useState(null);\n  const [personName, setPersonName] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    (async () => {\n      const res = await getApiResource(API_PERSON + `/${id}`);\n      console.log(res); // check received data for Errors\n\n      if (!res instanceof Error) {\n        setErrorApi(false);\n        setPersonInfo([{\n          title: 'Height',\n          data: res.height\n        }, {\n          title: 'Mass',\n          data: res.mass\n        }, {\n          title: 'Hair Color',\n          data: res.hair_color\n        }, {\n          title: 'Skin Color',\n          data: res.skin_color\n        }, {\n          title: 'Eye Color',\n          data: res.eye_color\n        }, {\n          title: 'Birth Year',\n          data: res.birth_year\n        }, {\n          title: 'Gender',\n          data: res.gender\n        }]);\n        setPersonName(res.name); // res.films\n      } else {\n        setErrorApi(res);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [personInfo && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: personInfo.map(_ref2 => {\n        let {\n          title,\n          data\n        } = _ref2;\n        data && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [title, \": \", data]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)\n        }, title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 34\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), personName, \"PersonPage\"]\n  }, void 0, true);\n};\n\n_s(PersonPage, \"GvK0UCO6pCYbRSMqetAm4cCGGMs=\", false, function () {\n  return [useParams];\n});\n\n_c = PersonPage;\nPersonPage.propTypes = {\n  setErrorApi: PropTypes.func\n};\nexport default _c2 = withErrorApi(PersonPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PersonPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/yaroslav/develop/web/apps/React/react-app/src/containers/PersonPage/PersonPage.jsx"],"names":["PropTypes","resetWarningCache","useEffect","useState","useParams","withErrorApi","getApiResource","API_PERSON","styles","PersonPage","setErrorApi","personInfo","setPersonInfo","personName","setPersonName","id","res","console","log","Error","title","data","height","mass","hair_color","skin_color","eye_color","birth_year","gender","name","map","propTypes","func"],"mappings":";;;AAAA,OAAOA,SAAP,IAAoBC,iBAApB,QAA6C,YAA7C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAAQC,UAAR,QAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;;AAEA,MAAMC,UAAU,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAACC,IAAAA;AAAD,GAAkB;AAClC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM;AAACY,IAAAA;AAAD,MAAOX,SAAS,EAAtB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAW;AACR,YAAMc,GAAG,GAAG,MAAMV,cAAc,CAACC,UAAU,GAAI,IAAGQ,EAAG,EAArB,CAAhC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAFQ,CAGR;;AACA,UAAG,CAACA,GAAD,YAAgBG,KAAnB,EAA0B;AACtBT,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,QAAAA,aAAa,CAAC,CACV;AAACQ,UAAAA,KAAK,EAAE,QAAR;AAAkBC,UAAAA,IAAI,EAAEL,GAAG,CAACM;AAA5B,SADU,EAEV;AAACF,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,IAAI,EAAEL,GAAG,CAACO;AAA1B,SAFU,EAGV;AAACH,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEL,GAAG,CAACQ;AAAhC,SAHU,EAIV;AAACJ,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEL,GAAG,CAACS;AAAhC,SAJU,EAKV;AAACL,UAAAA,KAAK,EAAE,WAAR;AAAqBC,UAAAA,IAAI,EAAEL,GAAG,CAACU;AAA/B,SALU,EAMV;AAACN,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEL,GAAG,CAACW;AAAhC,SANU,EAOV;AAACP,UAAAA,KAAK,EAAE,QAAR;AAAkBC,UAAAA,IAAI,EAAEL,GAAG,CAACY;AAA5B,SAPU,CAAD,CAAb;AASAd,QAAAA,aAAa,CAACE,GAAG,CAACa,IAAL,CAAb,CAXsB,CAYtB;AAEH,OAdD,MAcO;AACHnB,QAAAA,WAAW,CAACM,GAAD,CAAX;AACH;AACJ,KArBD;AAsBH,GAvBQ,EAuBN,EAvBM,CAAT;AAwBA,sBACI;AAAA,eAEKL,UAAU,iBACP;AAAA,gBACKA,UAAU,CAACmB,GAAX,CAAe,SAAmB;AAAA,YAAlB;AAACV,UAAAA,KAAD;AAAQC,UAAAA;AAAR,SAAkB;AAC/BA,QAAAA,IAAI,iBAAK;AAAA,iCACL;AAAA,uBAAOD,KAAP,QAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADK,WAASD,KAAT;AAAA;AAAA;AAAA;AAAA,gBAAT;AAGH,OAJA;AADL;AAAA;AAAA;AAAA;AAAA,YAHR,EAWKP,UAXL;AAAA,kBADJ;AAgBH,CA9CD;;GAAMJ,U;UAIWL,S;;;KAJXK,U;AAgDNA,UAAU,CAACsB,SAAX,GAAuB;AACnBrB,EAAAA,WAAW,EAAEV,SAAS,CAACgC;AADJ,CAAvB;AAIA,qBAAe3B,YAAY,CAACI,UAAD,CAA3B","sourcesContent":["import PropTypes, { resetWarningCache } from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport {useParams} from 'react-router-dom';\nimport { withErrorApi } from '../../hoc-helpers/withErrorApi';\nimport { getApiResource } from '../../utils/network';\nimport {API_PERSON} from '../../constants/api';\nimport styles from './PersonPage.module.css';\n\nconst PersonPage = ({setErrorApi}) => {\n    // console.log(id);\n    const [personInfo, setPersonInfo] = useState(null);\n    const [personName, setPersonName] = useState(null);\n    const {id} = useParams();\n\n    useEffect(() => {\n        (async() => {\n            const res = await getApiResource(API_PERSON + `/${id}`);\n            console.log(res);\n            // check received data for Errors\n            if(!res instanceof Error) {\n                setErrorApi(false);\n                setPersonInfo([\n                    {title: 'Height', data: res.height},\n                    {title: 'Mass', data: res.mass},\n                    {title: 'Hair Color', data: res.hair_color},\n                    {title: 'Skin Color', data: res.skin_color},\n                    {title: 'Eye Color', data: res.eye_color},\n                    {title: 'Birth Year', data: res.birth_year},\n                    {title: 'Gender', data: res.gender},\n                ]);\n                setPersonName(res.name);\n                // res.films\n\n            } else {\n                setErrorApi(res);\n            }\n        })()\n    }, []);\n    return (\n        <>\n            {/* {id} */}\n            {personInfo && (\n                <ul>\n                    {personInfo.map(({title, data}) => {\n                        data && (<li key={title}>\n                            <span>{title}: {data}</span>\n                        </li>)\n                    })}\n                </ul>\n            )}\n            {personName}\n            PersonPage\n        </>\n    );\n}\n\nPersonPage.propTypes = {\n    setErrorApi: PropTypes.func,\n}\n\nexport default withErrorApi(PersonPage);"]},"metadata":{},"sourceType":"module"}