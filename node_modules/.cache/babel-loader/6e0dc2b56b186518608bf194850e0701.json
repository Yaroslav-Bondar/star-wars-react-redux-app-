{"ast":null,"code":"import { HTTP, HTTPS } from '../constants/api';\n/**\n * // changing HTTP on HTTPS in URL\n * @param {*} url \n * @returns \n */\n\nexport const changeHTTP = url => {\n  const result = url ? url.replace(HTTP, HTTPS) : url;\n  return result;\n};\n\nconst getApiResource = async url => {\n  try {\n    // const data = await (await fetch(url)).json();\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      // console.log(response);\n      throw new Error(`${(response.statusText, response.status)}`); //  + ' ' + `${response.status}` console.log('Error. Could not fetch: ',);\n    } // console.log(response);\n\n\n    const data = await response.json(); // console.log(data);\n\n    return data;\n  } catch (error) {\n    // console.log('Could not fetch: ', error);\n    // console.log(error);\n    // console.log(error.message);\n    return error; // return false;\n  }\n}; // console.log(getApiResource(SWAPI_ROOT+SWAPI_PEOPLE));\n// (async() => console.log(await getApiResource(SWAPI_ROOT+SWAPI_PEOPLE)))();\n// getApiResource(SWAPI_ROOT + SWAPI_PEOPLE);\n\n\nexport { getApiResource };","map":{"version":3,"sources":["/home/yaroslav/develop/web/apps/React/react-app/src/utils/network.js"],"names":["HTTP","HTTPS","changeHTTP","url","result","replace","getApiResource","response","fetch","ok","Error","statusText","status","data","json","error"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,KAAd,QAA0B,kBAA1B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAGC,GAAG,IAAI;AAC7B,QAAMC,MAAM,GAAGD,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAYL,IAAZ,EAAkBC,KAAlB,CAAH,GAA8BE,GAAhD;AACA,SAAOC,MAAP;AACH,CAHM;;AAKP,MAAME,cAAc,GAAG,MAAMH,GAAN,IAAa;AAChC,MAAI;AACA;AACA,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,CAA5B;;AACA,QAAI,CAACI,QAAQ,CAACE,EAAd,EAAkB;AACd;AACA,YAAM,IAAIC,KAAJ,CAAW,GAAD,CAAGH,QAAQ,CAACI,UAAT,EAAqBJ,QAAQ,CAACK,MAAjC,CAAwC,EAAlD,CAAN,CAFc,CAGd;AACH,KAPD,CAQA;;;AACA,UAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB,CATA,CAUA;;AACA,WAAOD,IAAP;AACH,GAZD,CAaA,OAAME,KAAN,EAAa;AACT;AACA;AACA;AACA,WAAOA,KAAP,CAJS,CAKT;AACH;AACJ,CArBD,C,CAsBA;AACA;AACA;;;AACA,SAAQT,cAAR","sourcesContent":["import {HTTP, HTTPS} from '../constants/api';\n\n/**\n * // changing HTTP on HTTPS in URL\n * @param {*} url \n * @returns \n */\nexport const changeHTTP = url => {\n    const result = url ? url.replace(HTTP, HTTPS) : url;\n    return result;\n}\n\nconst getApiResource = async url => {\n    try {\n        // const data = await (await fetch(url)).json();\n        const response = await fetch(url);\n        if (!response.ok) {\n            // console.log(response);\n            throw new Error(`${response.statusText, response.status}`);\n            //  + ' ' + `${response.status}` console.log('Error. Could not fetch: ',);\n        }\n        // console.log(response);\n        const data = await response.json();\n        // console.log(data);\n        return data;\n    }\n    catch(error) {\n        // console.log('Could not fetch: ', error);\n        // console.log(error);\n        // console.log(error.message);\n        return error;\n        // return false;\n    }\n}\n// console.log(getApiResource(SWAPI_ROOT+SWAPI_PEOPLE));\n// (async() => console.log(await getApiResource(SWAPI_ROOT+SWAPI_PEOPLE)))();\n// getApiResource(SWAPI_ROOT + SWAPI_PEOPLE);\nexport {getApiResource};\n\n\n"]},"metadata":{},"sourceType":"module"}