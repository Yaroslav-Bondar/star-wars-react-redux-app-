{"ast":null,"code":"var _jsxFileName = \"/home/yaroslav/develop/web/apps/React/react-app/src/components/PersonPage/PersonFilms/PersonFilms.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { changeHTTP, makeConcurrentRequest } from '../../../utils/network';\nimport styles from './PersonFilms.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PersonFilms = _ref => {\n  _s();\n\n  let {\n    films\n  } = _ref;\n  const [filmsName, setFilmsName] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const filmsHTTPS = films.map(url => changeHTTP(url));\n      const response = await makeConcurrentRequest(filmsHTTPS); // sort ascending by movie episode id\n\n      response.sort((a, b) => a.episode_id - b.episode_id);\n      setFilmsName(response);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"PersonFilms:\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [filmsName.map(_ref2 => {\n          let {\n            title,\n            episode_id\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Episode \", episode_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)]\n          }, episode_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this);\n        }), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PersonFilms, \"GbDQdJcEmLJRVqlcvnEIeWfiKwg=\");\n\n_c = PersonFilms;\nPersonFilms.propTypes = {\n  films: PropTypes.array\n};\nexport default PersonFilms;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonFilms\");","map":{"version":3,"sources":["/home/yaroslav/develop/web/apps/React/react-app/src/components/PersonPage/PersonFilms/PersonFilms.js"],"names":["useState","useEffect","PropTypes","changeHTTP","makeConcurrentRequest","styles","PersonFilms","films","filmsName","setFilmsName","filmsHTTPS","map","url","response","sort","a","b","episode_id","title","color","propTypes","array"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,UAAR,EAAoBC,qBAApB,QAAgD,wBAAhD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;;AAEA,MAAMC,WAAW,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAC7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAMS,UAAU,GAAGH,KAAK,CAACI,GAAN,CAAUC,GAAG,IAAIT,UAAU,CAACS,GAAD,CAA3B,CAAnB;AACA,YAAMC,QAAQ,GAAG,MAAMT,qBAAqB,CAACM,UAAD,CAA5C,CAFS,CAGT;;AACAG,MAAAA,QAAQ,CAACC,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,UAAF,GAAeD,CAAC,CAACC,UAAzC;AACAR,MAAAA,YAAY,CAACI,QAAD,CAAZ;AACH,KAND;AAOH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI;AAAA,4CAEI;AAAA,6BACI;AAAA,mBACKL,SAAS,CAACG,GAAV,CAAc;AAAA,cAAC;AAACO,YAAAA,KAAD;AAAQD,YAAAA;AAAR,WAAD;AAAA,8BACX;AAAqB,YAAA,KAAK,EAAE;AAACE,cAAAA,KAAK,EAAE;AAAR,aAA5B;AAAA,oCACI;AAAA,qCAAeF,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAASD,UAAT;AAAA;AAAA;AAAA;AAAA,kBADW;AAAA,SAAd,CADL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAeH,CA5BD;;GAAMX,W;;KAAAA,W;AA8BNA,WAAW,CAACc,SAAZ,GAAwB;AACpBb,EAAAA,KAAK,EAAEL,SAAS,CAACmB;AADG,CAAxB;AAIA,eAAef,WAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {changeHTTP, makeConcurrentRequest} from '../../../utils/network';\nimport styles from './PersonFilms.module.css';\n\nconst PersonFilms = ({films}) => {\n    const [filmsName, setFilmsName] = useState([]);\n\n    useEffect(() => {\n        (async () => {\n            const filmsHTTPS = films.map(url => changeHTTP(url));\n            const response = await makeConcurrentRequest(filmsHTTPS);\n            // sort ascending by movie episode id\n            response.sort((a, b) => a.episode_id - b.episode_id);\n            setFilmsName(response);\n        })();\n    }, []);\n\n    return (\n        <>\n            PersonFilms:\n            <div>\n                <ul>\n                    {filmsName.map(({title, episode_id}) => \n                        <li key={episode_id} style={{color: 'white',}}>\n                            <span>Episode {episode_id}</span> \n                            <span> : </span> \n                            <span>{title}</span>\n                        </li>)};\n                </ul>\n            </div>    \n        </>\n    );\n}\n\nPersonFilms.propTypes = {\n    films: PropTypes.array,\n}\n\nexport default PersonFilms;"]},"metadata":{},"sourceType":"module"}