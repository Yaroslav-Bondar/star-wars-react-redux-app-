{"ast":null,"code":"var _jsxFileName = \"/home/yaroslav/develop/web/apps/React/react-app/src/containers/PersonPage/PersonPage.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes, { resetWarningCache } from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { withErrorApi } from '../../hoc-helpers/withErrorApi';\nimport { getApiResource } from '../../utils/network';\nimport { getPeopleImage } from '../../services/getPeopleData';\nimport { API_PERSON } from '../../constants/api';\nimport styles from './PersonPage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PersonPage = _ref => {\n  _s();\n\n  let {\n    setErrorApi\n  } = _ref;\n  // console.log(id);\n  const [personInfo, setPersonInfo] = useState(null);\n  const [personName, setPersonName] = useState(null);\n  const [personPhoto, setPersonPhoto] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    (async () => {\n      const res = await getApiResource(API_PERSON + `/${id}`);\n      console.log(res); // check received data for Errors\n\n      if (!(res instanceof Error)) {\n        setErrorApi(false);\n        setPersonInfo([{\n          title: 'Height',\n          data: res.height\n        }, {\n          title: 'Mass',\n          data: res.mass\n        }, {\n          title: 'Hair Color',\n          data: res.hair_color\n        }, {\n          title: 'Skin Color',\n          data: res.skin_color\n        }, {\n          title: 'Eye Color',\n          data: res.eye_color\n        }, {\n          title: 'Birth Year',\n          data: res.birth_year\n        }, {\n          title: 'Gender',\n          data: res.gender\n        }]);\n        setPersonName(res.name);\n        setPersonPhoto(getPeopleImage(id)); // res.films\n      } else {\n        setErrorApi(res);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: personName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: personPhoto,\n      alt: personName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), personInfo && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: personInfo.map(_ref2 => {\n        let {\n          title,\n          data\n        } = _ref2;\n        return data && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [title, \": \", data]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)\n        }, title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 34\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PersonPage, \"Ic1Tr+RHjr8g7vUnLCLdQ08Wjxg=\", false, function () {\n  return [useParams];\n});\n\n_c = PersonPage;\nPersonPage.propTypes = {\n  setErrorApi: PropTypes.func\n};\nexport default _c2 = withErrorApi(PersonPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PersonPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/yaroslav/develop/web/apps/React/react-app/src/containers/PersonPage/PersonPage.jsx"],"names":["PropTypes","resetWarningCache","useEffect","useState","useParams","withErrorApi","getApiResource","getPeopleImage","API_PERSON","styles","PersonPage","setErrorApi","personInfo","setPersonInfo","personName","setPersonName","personPhoto","setPersonPhoto","id","res","console","log","Error","title","data","height","mass","hair_color","skin_color","eye_color","birth_year","gender","name","map","propTypes","func"],"mappings":"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","sourcesContent":["import PropTypes, { resetWarningCache } from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport {useParams} from 'react-router-dom';\nimport { withErrorApi } from '../../hoc-helpers/withErrorApi';\nimport { getApiResource } from '../../utils/network';\nimport {getPeopleImage} from '../../services/getPeopleData'\nimport {API_PERSON} from '../../constants/api';\nimport styles from './PersonPage.module.css';\n\nconst PersonPage = ({setErrorApi}) => {\n    // console.log(id);\n    const [personInfo, setPersonInfo] = useState(null);\n    const [personName, setPersonName] = useState(null);\n    const [personPhoto, setPersonPhoto] = useState(null);\n    const {id} = useParams();\n\n    useEffect(() => {\n        (async() => {\n            const res = await getApiResource(API_PERSON + `/${id}`);\n            console.log(res);\n            // check received data for Errors\n            if(!(res instanceof Error)) {\n                setErrorApi(false);\n                setPersonInfo([\n                    {title: 'Height', data: res.height},\n                    {title: 'Mass', data: res.mass},\n                    {title: 'Hair Color', data: res.hair_color},\n                    {title: 'Skin Color', data: res.skin_color},\n                    {title: 'Eye Color', data: res.eye_color},\n                    {title: 'Birth Year', data: res.birth_year},\n                    {title: 'Gender', data: res.gender},\n                ]);\n                setPersonName(res.name);\n                setPersonPhoto(getPeopleImage(id));\n                // res.films\n\n            } else {\n                setErrorApi(res);\n            }\n        })()\n    }, []);\n    return (\n        <>\n            <h1>{personName}</h1>\n            <img src={personPhoto} alt={personName}/>\n            {personInfo && ( \n                <ul>\n                    {personInfo.map(({title, data}) => (\n                        data && (<li key={title}>\n                            <span>{title}: {data}</span>\n                        </li>)\n                    ))}\n                </ul>\n            )}\n        </>\n    );\n}\n\nPersonPage.propTypes = {\n    setErrorApi: PropTypes.func,\n}\n\nexport default withErrorApi(PersonPage);"]},"metadata":{},"sourceType":"module"}