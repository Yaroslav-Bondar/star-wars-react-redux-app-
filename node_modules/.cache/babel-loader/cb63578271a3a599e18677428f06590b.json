{"ast":null,"code":"var _jsxFileName = \"/home/yaroslav/develop/web/apps/React/react-app/src/hoc-helpers/withErrorApi.jsx\";\nimport { useState } from 'react';\nimport ErrorMessage from '../components/ErrorMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst withErrorApi = View => {\n  var _s = $RefreshSig$();\n\n  return _s(props => {\n    _s();\n\n    const [errorApi, setErrorApi] = useState(false);\n    console.log(errorApi);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: errorApi ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        errorApi: errorApi\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(View, {\n        setErrorApi: setErrorApi,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  }, \"tAD9HgyH+YqNVOkH4kLYUb/3FU0=\");\n};\n\nexport { withErrorApi };","map":{"version":3,"sources":["/home/yaroslav/develop/web/apps/React/react-app/src/hoc-helpers/withErrorApi.jsx"],"names":["useState","ErrorMessage","withErrorApi","View","props","errorApi","setErrorApi","console","log"],"mappings":";AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;;AACA,MAAMC,YAAY,GAAGC,IAAI,IAAI;AAAA;;AACzB,YAAOC,KAAK,IAAI;AAAA;;AACZ,UAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,wBACI;AAAA,gBACMA,QAAQ,gBAAG,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAIA;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAH,gBACN,QAAC,IAAD;AAAM,QAAA,WAAW,EAAIC,WAArB;AAAA,WAAsCF;AAAtC;AAAA;AAAA;AAAA;AAAA;AAFR,qBADJ;AAMH,GATD;AAUH,CAXD;;AAaA,SAAQF,YAAR","sourcesContent":["import {useState} from 'react';\nimport ErrorMessage from '../components/ErrorMessage';\nconst withErrorApi = View => {\n    return props => {\n        const [errorApi, setErrorApi] = useState(false);\n        console.log(errorApi);\n        return (\n            <> \n                { errorApi ? <ErrorMessage errorApi = {errorApi}/> : \n                    <View setErrorApi = {setErrorApi} {...props}/> }\n            </>\n        )\n    }\n}\n\nexport {withErrorApi};"]},"metadata":{},"sourceType":"module"}