{"ast":null,"code":"var _jsxFileName = \"/home/yaroslav/develop/web/apps/React/react-app/src/components/PersonPage/PersonFilms/PersonFilms.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { changeHTTP, makeConcurrentRequest } from '../../../utils/network';\nimport styles from './PersonFilms.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PersonFilms = _ref => {\n  _s();\n\n  let {\n    films\n  } = _ref;\n  const [filmsName, setFilmsName] = useState([]); // const responses = films.map(urlHttp => {\n  //     const urlHttps = changeHTTP(urlHttp);\n  //     return fetch(urlHttps);\n  // });\n  // console.log('films responses', responses);\n  // const res = Promise.all(responses.map(responses => responses.json()))\n  // .then(resp => resp.map(r => console.log(r.json().value)))\n  // console.log('res', res);\n\n  useEffect(() => {\n    (async () => {\n      const filmsHTTPS = films.map(url => changeHTTP(url));\n      const response = await makeConcurrentRequest(filmsHTTPS);\n      let respFilter = response.map(film => {\n        console.log(film.title);\n        return film.title;\n      }); // console.log('response PersonFilms', response);\n      // setFilmsName(response);\n\n      setFilmsName(respFilter);\n      console.log('respFilter', respFilter);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"PersonFilms:\", filmsName.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [\"filmsName.map((title, index) => \", /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            color: 'white'\n          },\n          children: [\"$\", title]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 58\n        }, this), \");\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), films.map(film => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: film\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }, this))]\n  }, void 0, true);\n};\n\n_s(PersonFilms, \"GbDQdJcEmLJRVqlcvnEIeWfiKwg=\");\n\n_c = PersonFilms;\nPersonFilms.propTypes = {\n  films: PropTypes.array\n};\nexport default PersonFilms;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonFilms\");","map":{"version":3,"sources":["/home/yaroslav/develop/web/apps/React/react-app/src/components/PersonPage/PersonFilms/PersonFilms.js"],"names":["useState","useEffect","PropTypes","changeHTTP","makeConcurrentRequest","styles","PersonFilms","films","filmsName","setFilmsName","filmsHTTPS","map","url","response","respFilter","film","console","log","title","length","color","index","propTypes","array"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,UAAR,EAAoBC,qBAApB,QAAgD,wBAAhD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;;AAEA,MAAMC,WAAW,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAC7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C,CAD6B,CAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAMS,UAAU,GAAGH,KAAK,CAACI,GAAN,CAAUC,GAAG,IAAIT,UAAU,CAACS,GAAD,CAA3B,CAAnB;AACA,YAAMC,QAAQ,GAAG,MAAMT,qBAAqB,CAACM,UAAD,CAA5C;AACA,UAAII,UAAU,GAAGD,QAAQ,CAACF,GAAT,CAAaI,IAAI,IAAI;AAAGC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AAAyB,eAAOH,IAAI,CAACG,KAAZ;AAAmB,OAApE,CAAjB,CAHS,CAIT;AACA;;AACAT,MAAAA,YAAY,CAACK,UAAD,CAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,UAA1B;AACH,KARD;AASH,GAVQ,EAUN,EAVM,CAAT;AAWA,sBACI;AAAA,+BAEMN,SAAS,CAACW,MAAV,iBACE;AAAA,6BACI;AAAA,oEACqC;AAAgB,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR,WAAvB;AAAA,0BAA4CF,KAA5C;AAAA,WAASG,KAAT;AAAA;AAAA;AAAA;AAAA,gBADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHR,EAQKd,KAAK,CAACI,GAAN,CAAUI,IAAI,iBAAI;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YAAlB,CARL;AAAA,kBADJ;AAYH,CAlCD;;GAAMT,W;;KAAAA,W;AAoCNA,WAAW,CAACgB,SAAZ,GAAwB;AACpBf,EAAAA,KAAK,EAAEL,SAAS,CAACqB;AADG,CAAxB;AAIA,eAAejB,WAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {changeHTTP, makeConcurrentRequest} from '../../../utils/network';\nimport styles from './PersonFilms.module.css';\n\nconst PersonFilms = ({films}) => {\n    const [filmsName, setFilmsName] = useState([]);\n    // const responses = films.map(urlHttp => {\n    //     const urlHttps = changeHTTP(urlHttp);\n    //     return fetch(urlHttps);\n    // });\n    // console.log('films responses', responses);\n    // const res = Promise.all(responses.map(responses => responses.json()))\n    // .then(resp => resp.map(r => console.log(r.json().value)))\n\n    // console.log('res', res);\n    useEffect(() => {\n        (async () => {\n            const filmsHTTPS = films.map(url => changeHTTP(url));\n            const response = await makeConcurrentRequest(filmsHTTPS);\n            let respFilter = response.map(film => {  console.log(film.title); return film.title })\n            // console.log('response PersonFilms', response);\n            // setFilmsName(response);\n            setFilmsName(respFilter);\n            console.log('respFilter', respFilter);\n        })();\n    }, []);\n    return (\n        <>\n            PersonFilms:\n            { filmsName.length &&\n                <div>\n                    <ul>\n                        filmsName.map((title, index) => {<li key={index} style={{color: 'white',}}>${title}</li>});\n                    </ul>\n                </div> }   \n            {films.map(film => <span>{film}</span>)}\n        </>\n    );\n}\n\nPersonFilms.propTypes = {\n    films: PropTypes.array,\n}\n\nexport default PersonFilms;"]},"metadata":{},"sourceType":"module"}