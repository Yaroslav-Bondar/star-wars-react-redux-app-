{"ast":null,"code":"var _jsxFileName = \"/home/yaroslav/develop/web/apps/React/react-app/src/components/PersonPage/PersonFilms/PersonFilms.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { changeHTTP, makeConcurrentRequest } from '../../../utils/network';\nimport styles from './PersonFilms.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PersonFilms = _ref => {\n  _s();\n\n  let {\n    films\n  } = _ref;\n  const [filmsName, setFilmsName] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const filmsHTTPS = films.map(url => changeHTTP(url));\n      const response = await makeConcurrentRequest(filmsHTTPS); // sort ascending by movie episode id\n\n      response.sort((a, b) => a.episode_id - b.episode_id);\n      setFilmsName(response);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.list__container,\n      children: [filmsName.map(_ref2 => {\n        let {\n          title,\n          episode_id\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.list__item,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.item__episode,\n            children: [\"Episode \", episode_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.item__separator,\n            children: \" : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.item__title,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, episode_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this);\n      }), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PersonFilms, \"GbDQdJcEmLJRVqlcvnEIeWfiKwg=\");\n\n_c = PersonFilms;\nPersonFilms.propTypes = {\n  films: PropTypes.array\n};\nexport default PersonFilms;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonFilms\");","map":{"version":3,"sources":["/home/yaroslav/develop/web/apps/React/react-app/src/components/PersonPage/PersonFilms/PersonFilms.js"],"names":["useState","useEffect","PropTypes","changeHTTP","makeConcurrentRequest","styles","PersonFilms","films","filmsName","setFilmsName","filmsHTTPS","map","url","response","sort","a","b","episode_id","wrapper","list__container","title","list__item","item__episode","item__separator","item__title","propTypes","array"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,UAAR,EAAoBC,qBAApB,QAAgD,wBAAhD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,MAAMC,WAAW,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAC7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAMS,UAAU,GAAGH,KAAK,CAACI,GAAN,CAAUC,GAAG,IAAIT,UAAU,CAACS,GAAD,CAA3B,CAAnB;AACA,YAAMC,QAAQ,GAAG,MAAMT,qBAAqB,CAACM,UAAD,CAA5C,CAFS,CAGT;;AACAG,MAAAA,QAAQ,CAACC,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,UAAF,GAAeD,CAAC,CAACC,UAAzC;AACAR,MAAAA,YAAY,CAACI,QAAD,CAAZ;AACH,KAND;AAOH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAER,MAAM,CAACa,OAAvB;AAAA,2BACI;AAAI,MAAA,SAAS,EAAEb,MAAM,CAACc,eAAtB;AAAA,iBACKX,SAAS,CAACG,GAAV,CAAc;AAAA,YAAC;AAACS,UAAAA,KAAD;AAAQH,UAAAA;AAAR,SAAD;AAAA,4BACX;AAAI,UAAA,SAAS,EAAEZ,MAAM,CAACgB,UAAtB;AAAA,kCACI;AAAM,YAAA,SAAS,EAAEhB,MAAM,CAACiB,aAAxB;AAAA,mCAAgDL,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,SAAS,EAAEZ,MAAM,CAACkB,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAM,YAAA,SAAS,EAAElB,MAAM,CAACmB,WAAxB;AAAA,sBAAsCJ;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAAuCH,UAAvC;AAAA;AAAA;AAAA;AAAA,gBADW;AAAA,OAAd,CADL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAzBD;;GAAMX,W;;KAAAA,W;AA2BNA,WAAW,CAACmB,SAAZ,GAAwB;AACpBlB,EAAAA,KAAK,EAAEL,SAAS,CAACwB;AADG,CAAxB;AAIA,eAAepB,WAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {changeHTTP, makeConcurrentRequest} from '../../../utils/network';\nimport styles from './PersonFilms.module.css';\n\nconst PersonFilms = ({films}) => {\n    const [filmsName, setFilmsName] = useState([]);\n\n    useEffect(() => {\n        (async () => {\n            const filmsHTTPS = films.map(url => changeHTTP(url));\n            const response = await makeConcurrentRequest(filmsHTTPS);\n            // sort ascending by movie episode id\n            response.sort((a, b) => a.episode_id - b.episode_id);\n            setFilmsName(response);\n        })();\n    }, []);\n\n    return (\n        <div className={styles.wrapper}>\n            <ul className={styles.list__container}>\n                {filmsName.map(({title, episode_id}) => \n                    <li className={styles.list__item} key={episode_id}>\n                        <span className={styles.item__episode}>Episode {episode_id}</span> \n                        <span className={styles.item__separator}> : </span> \n                        <span className={styles.item__title}>{title}</span>\n                    </li>)};\n            </ul>\n        </div>    \n    )\n}\n\nPersonFilms.propTypes = {\n    films: PropTypes.array,\n}\n\nexport default PersonFilms;"]},"metadata":{},"sourceType":"module"}